
group=funwithazure001
vnet=vnet-dev-funwithazure

az group create -g $group -l eastus

username=adminuser$RANDOM
password='SecretPassword!@#'$RANDOM

az datafactory create --resource-group $group --factory-name adf-dev-funwithazure

az network vnet create -n $vnet -g $group -l eastus --address-prefixes '10.3.0.0/16' --subnet-name vm --subnet-prefixes '10.3.0.0/24' 

az network vnet subnet create -n pe --vnet-name $vnet -g $group  --address-prefixes "10.3.1.0/24"


az vm create \
  -n vm-sql \
  -g $group \
  -l eastus \
  --size standard_ds3_v2 \
  --image MicrosoftSQLServer:SQL2017-WS2016:Standard:latest \
  --admin-username $username \
  --admin-password $password \
  --vnet-name vnet-dev-funwithazure \
  --subnet vm\
  --public-ip-address ""



public-ip-sku Standard

az vm open-port -g $group --name vm-sql --port 1433

az sql vm create \
  -n vm-sql \
  -g $group \
  -l eastus\
  --license-type PAYG \
  --connectivity-type PRIVATE \
  --sql-mgmt-type Full \
  --sql-auth-update-username $username \
  --sql-auth-update-pwd $password \
  --port 1433

az vm create \
  -n vm-ir \
  -g $group \
  -l eastus\
  --size standard_ds3_v2 \
  --image Win2019Datacenter \
  --admin-username $username \
  --admin-password $password \
  --vnet-name vnet-dev-funwithazure\
  --subnet vm\
  --nsg-rule rdp 

az storage account create \
  -n storage-dev-$RANDOM$RANDOM \
  -g $group \
  -l eastus

az vm list \
  -g $group -d \
  --query "[].{name:name,publicIps:publicIps,privateIps:privateIps,user:osProfile.adminUsername,password:'$password'}" \
  -o jsonc > clouddrive/$group.json

cat clouddrive/$group.json


let "randomIdentifier=$RANDOM*$RANDOM"
location="East US"
resourceGroup=$group

tag="create-and-configure-database"
server="sql-paas-fun-with-azure-$randomIdentifier"
database="funwithazuredestination$randomIdentifier"
login="azureuser"
passwordsqlpaas="Pa$$w0rD-$randomIdentifier"
# Specify appropriate IP address values for your environment
# to limit access to the SQL Database server
startIp=0.0.0.0
endIp=0.0.0.0


echo "Creating $server in $location..."
az sql server create --name $server --resource-group $resourceGroup --location "$location" --admin-user $login --admin-password $passwordsqlpaas

echo "Configuring firewall..."
az sql server firewall-rule create --resource-group $resourceGroup --server $server -n AllowYourIp --start-ip-address $startIp --end-ip-address $endIp

echo "Creating $database on $server..."
az sql db create --resource-group $resourceGroup --server $server --name $database --sample-name AdventureWorksLT --edition GeneralPurpose --family Gen5 --capacity 2 --zone-redundant true # zone redundancy is only supported on premium and business critical service tiers

echo "Creating $database on $server..."
az sql db create --resource-group $resourceGroup --server $server --name $database  --edition GeneralPurpose --family Gen5 --capacity 2 --zone-redundant true # zone redundancy is only supported on premium and business critical service tiers

echo "Creating $database on $server..."
az sql db create --resource-group $resourceGroup --server $server --name $database  --edition GeneralPurpose --family Gen5 --capacity 2 --zone-redundant true # zone redundancy is only supported on premium and business critical service tiers


This is tested!!